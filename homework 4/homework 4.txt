1. In a compiled language, the program is expressed in the instructions of the target machine. This machine code is not decipherable by humans. However in an interpreted language, the source code is not directly translated by the target machine. The interpreter reads and executes the code. Compiled programs can be faster than interpreted code, however additional time is needed to complete the compilation step before testing. Interpreted languages can be more flexible but it has typical execution speed compared to compiled languages.
2. Dynamically typed JavaScript has type checking performed at runtime, which means that the type of variable is allowed to change over its lifetime. This is contrary to static typed JavaScript, in which the type is bound to the variable. Types are checked at compile time. Weakly typed recognizes different data types but doesn't use them too strictly, trying to convert data when it seems reasonable vs. strong typing which is a type discipline which is enforced by the compiler.
3. Var is old school, and it is a global+function scoped keyword and it is also redeclarable. Let is block-scoped and redeclarable. Const is block-scoped but not redeclarable. 
4. An anonymous function is a function without a name.
5. Objects are a non-primitive data type, and it is a collection of properties. They are also consisting of key value pairs.
